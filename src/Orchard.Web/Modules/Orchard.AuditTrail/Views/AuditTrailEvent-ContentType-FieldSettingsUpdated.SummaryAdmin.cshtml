@using Orchard.AuditTrail.Helpers
@using Orchard.AuditTrail.Services.Models
@{
    Style.Include("audittrail-contenttype-event.css");
}
@functions {
    string ToFriendlyEmpty(string value) {
        return String.IsNullOrWhiteSpace(value) ? Html.Encode(T("<empty>").Text) : value;
    }
}
@{
    var eventData = (IDictionary<string, object>) Model.EventData;
    var contentTypeName = eventData.Get<string>("ContentTypeName");
    var contentPartName = eventData.Get<string>("ContentPartName");
    var contentFieldName = eventData.Get<string>("ContentFieldName");
    var diff = (DiffDictionary<string, string>)Model.Diff;
    var isImplicitPart = contentTypeName == contentPartName;
    var captionTemplate = isImplicitPart ? "Settings for <strong>{0}</strong> attached the <strong>{1}</strong> content type were updated:" : "Settings for <strong>{0}</strong> attached to <strong>{1}</strong> of the <strong>{2}</strong> content type were updated:";
}
<section class="audittrail-contenttype-event">
    <div>@T(captionTemplate, contentFieldName, contentPartName, contentTypeName)</div>
    <ul>
        @foreach (var setting in diff) {
            <li>
                @T("<strong>{0}</strong> was changed from <strong>{1}</strong> to <strong>{2}</strong>.", setting.Key, ToFriendlyEmpty(setting.Value.OldValue), ToFriendlyEmpty(setting.Value.NewValue))
            </li>
        }
    </ul>
</section>