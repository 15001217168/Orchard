@using Orchard.AuditTrail.Models
@using Orchard.AuditTrail.Providers.Content
@using Orchard.ContentManagement
@{
    Style.Include("audittrail-content-event.css");
}
@{
    var record = (AuditTrailEventRecord)Model.Record;
    var contentItem = (ContentItem)Model.ContentItem;
    var diffNodes = (IList<DiffNode>)Model.DiffNodes;
}
@functions {
    string FriendlyEmptyString(string value) {
        return String.IsNullOrWhiteSpace(value) ? T("<empty>").Text : value;
    }
}
<section class="audittrail-content-eventmetadata">
    @T("ID:") <strong>@contentItem.Id</strong><br />
    @contentItem.ContentType: @Html.ItemEditLink(contentItem)<br />
    @Html.ActionLink(T("Version {0}", contentItem.Version).Text, "Detail", "Content", new { area = "Orchard.AuditTrail", id = contentItem.Id, version = contentItem.Version }, null)
    @if (!String.IsNullOrWhiteSpace(record.Comment)) {
        <br />
        @T("Comment:")<br />
        @record.Comment
    }
</section>
<section class="audittrail-content-eventsummary">
    @if (diffNodes != null) {
        <table class="items">
            <thead>
                <tr>
                    <th>@T("Action")</th>
                    <th>@T("Context")</th>
                    <th>@T("Before")</th>
                    <th>@T("After")</th>
                </tr>
            </thead>
            <tbody>
                @if (!diffNodes.Any()) {
                    <tr>
                        <td colspan="4">@T("")</td>
                    </tr>
                }
                else {
                    foreach (var node in diffNodes) {
                        <tr>
                            <td>@T(node.Type.ToString())</td>
                            <td>@node.Context</td>
                            <td>@FriendlyEmptyString(node.Previous)</td>
                            <td>@FriendlyEmptyString(node.Current)</td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    }
</section>