@model Orchard.Localization.ViewModels.EditLocalizationViewModel
@using System.Globalization
@using System.Linq;
@{
    Style.Require("LocalizationAdmin");
    var siteCultures = Model.SiteCultures.ToList();
}
<fieldset class="localization culture-selection">
    @if (Model.ContentItem.ContentItem.Id == 0 && Model.SelectedCulture == null && Model.ContentLocalizations.Localizations.Count() == 0) {
        /* If this is a new item */
        <fieldset class="localization culture-selection">
            <label for="SelectedCulture">@T("Content Localization")</label>
            <div>
                @T("This is the <em>{0}</em> variation of the content",
                 BuildSelectedCultureList(Html.FieldIdFor(m => m.SelectedCulture), siteCultures, Model.SelectedCulture))
            </div>
        </fieldset>
    }

    @if (Model.SelectedCulture != null && !siteCultures.All(c => c == Model.SelectedCulture || Model.ContentLocalizations.Localizations.Any(l => c == l.Culture.Culture))) {
        <div class="add-localization">@Html.ActionLink(T("+ New translation").Text, "Translate", "Admin", new { area = "Orchard.Localization", id = Model.ContentItem.Id }, null)</div>
    }
</fieldset>
@functions{
    private string BuildSelectedCultureList(string name, IEnumerable<string> siteCultures, string culture) {
        TagBuilder selectTag = new TagBuilder("select");
        selectTag.Attributes["id"] = name;
        selectTag.Attributes["name"] = name;

        foreach (var siteCulture in siteCultures) {
            TagBuilder optionTag = new TagBuilder("option");
            optionTag.Attributes["data-content-dir"] = CultureInfo.GetCultureInfo(siteCulture).TextInfo.IsRightToLeft ? "rtl" : "ltr";
            optionTag.Attributes["value"] = siteCulture;
            optionTag.SetInnerText(siteCulture);
            selectTag.InnerHtml += optionTag.ToString();
        }

        return selectTag.ToString();
    }
}
@using (Script.Foot()) {
    <script type="text/javascript">
//<![CDATA[
    (function ($) {
        "use strict";

        var culture = $("#@Html.FieldIdFor(m => m.SelectedCulture)");
        culture.change(function () {
            var optionDirectionality = $("option:selected", this).attr("data-content-dir");
            var contentZone = $(".zone-content");
            if (contentZone.hasClass(optionDirectionality))
                return;

            var oldClass = optionDirectionality === "ltr" ? "rtl" : "";

            contentZone.removeClass("content-" + oldClass);
            contentZone.addClass("content-" + optionDirectionality);

            $(this).trigger("localization.ui.directionalitychanged");
        });
    })(jQuery);
//]]>
    </script>
}