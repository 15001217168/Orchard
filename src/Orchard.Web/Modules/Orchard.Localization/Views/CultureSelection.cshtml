@using System.Globalization
@using System.Text
@model Orchard.Localization.ViewModels.AddLocalizationViewModel
@{
    Style.Require("LocalizationAdmin");
}
<fieldset class="localization culture-selection">
    <label for="SelectedCulture">@T("Content Localization")</label>
    <div>
        @T("This is the <em>{0}</em> variation of {1}",
                     BuildSelectedCultureList(Html.FieldIdFor(m => m.SelectedCulture), Html.FieldNameFor(m => m.SelectedCulture), Model.MissingCultures, Model.SelectedCulture),
            Html.ItemEditLink(Model.Content))
    </div>
</fieldset>
@functions{
    private string BuildSelectedCultureList(string id, string name, IEnumerable<string> siteCultures, string culture) {
        TagBuilder selectTag = new TagBuilder("select");
        selectTag.Attributes["id"] = id;
        selectTag.Attributes["name"] = name;

        foreach (var siteCulture in siteCultures) {
            TagBuilder optionTag = new TagBuilder("option");
            optionTag.Attributes["data-content-dir"] = CultureInfo.GetCultureInfo(siteCulture).TextInfo.IsRightToLeft ? "rtl" : "ltr";
            optionTag.Attributes["value"] = siteCulture;
            optionTag.SetInnerText(siteCulture);
            selectTag.InnerHtml += optionTag.ToString();
        }
        
        return selectTag.ToString();
    }
}
