@using IDeliverable.Licensing.Orchard.Helpers
@using Orchard.Utility.Extensions
@model IDeliverable.Licensing.Orchard.ViewModels.LicenseViewModel
@{
    Layout.Title = T("Slide Show License");
}
@if (!String.IsNullOrWhiteSpace(Model.Key))
{
    if (Model.IsValid)
    {
        if (Model.LicenseValidationResult.IsLocalHost)
        {
            <div class="message message-Information">@T("License key validation is skipped for local requests.")</div>
        }
        else
        {
            <div class="message message-Information">@T("A valid license key has been provided for the hostname <strong>{0}</strong>.", Request.GetHttpHost())</div>
        }
    }
    else
    {
        <div class="message message-Warning">@T("License validation failed for the hostname <strong>{0}</strong>. Only local requests or to the licensed hostname are allowed. Validation error: <strong>{1}</strong>.", Request.GetHttpHost(), Model.LicenseValidationResult.Error.ToString().CamelFriendly())</div>
    }
}
else
{
    <div class="message message-Warning">@T("No license key has been provided. Only local requests or to the licensed hostname are allowed.")</div>
}
@Html.ValidationSummary()
@using (Html.BeginFormAntiForgeryPost())
{
    <fieldset>
        <div class="form-group">
            @Html.LabelFor(m => m.Key, T("Key"))
            @Html.TextBoxFor(m => m.Key, new { @class = "text large" })
            @Html.Hint(T("The license key associated with the public hostname of this website."))
        </div>
    </fieldset>

    <button type="submit">@T("Save")</button>
}

<div class="message">
    <p>@T("For pricing and licensing options, please visit our <a href=\"http://www.ideliverable.com/products/ideliverable-slides\">product page</a>.")</p>
    <p>@T("For technical support, please visit our <a href=\"http://www.ideliverable.com/support\">support page</a>.")</p>
</div>