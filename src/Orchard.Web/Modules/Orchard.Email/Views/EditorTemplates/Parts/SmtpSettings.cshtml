@using System.Net.Mail
@model Orchard.Email.Models.SmtpSettingsPart
@{
    Script.Require("Toastr");
    Style.Require("Toastr");
    var smtpClient = new SmtpClient();
}

<fieldset>
    <legend>@T("Email")</legend>
    <div>
        <label for="@Html.FieldIdFor(m => m.Address)">@T("Sender email address")</label>
        @Html.TextBoxFor(m => m.Address, new { @class = "form-control", placeholder = Model.AddressPlaceholder })
        @Html.ValidationMessage("Address", "*")
        <span class="help-block">@T("The default email address to use as a sender.")</span>
    </div>
    <div>
        <label for="@Html.FieldIdFor(m => m.Host)">@T("Host name")</label>
        @Html.TextBoxFor(m => m.Host, new { placeholder = smtpClient.Host, @class = "form-control" })
        @Html.ValidationMessage("Host", "*")
        <span class="help-block">@T("The SMTP server domain, e.g. <i>smtp.mailprovider.com</i>.")</span>
    </div>
    <div>
        <label for="@Html.FieldIdFor(m => m.Port)">@T("Port number")</label>
        @Html.TextBoxFor(m => m.Port, new { placeholder = smtpClient.Port, @class = "form-control" })
        @Html.ValidationMessage("Port", "*")
        <span class="help-block">@T("The SMTP server port, usually 25.")</span>
    </div>
    <div class="or-checkbox">
        @Html.EditorFor(m => m.EnableSsl)
        <label for="@Html.FieldIdFor(m => m.EnableSsl)" class="forcheckbox">@T("Enable SSL communications")</label>
        @Html.ValidationMessage("EnableSsl", "*")
        <span class="help-block">@T("Check if the SMTP server requires SSL communications.")</span>
    </div>
    <div class="or-checkbox">
        @Html.EditorFor(m => m.RequireCredentials)
        <label for="@Html.FieldIdFor(m => m.RequireCredentials)" class="forcheckbox">@T("Require credentials")</label>
        @Html.ValidationMessage("RequireCredentials", "*")
    </div>

    <div data-controllerid="@Html.FieldIdFor(m => m.RequireCredentials)">

        <div class="or-radio">
            @Html.RadioButtonFor(m => m.UseDefaultCredentials, false, new { id = "customCredentialsOption", name = "UseDefaultCredentials" })
            <label for="customCredentialsOption" class="forcheckbox">@T("Specify username/password")</label>
            @Html.ValidationMessage("UseDefaultCredentials", "*")
        </div>

        <div class="or-radio">
            @Html.RadioButtonFor(m => m.UseDefaultCredentials, true, new { id = "defaultCredentialsOptions", name = "UseDefaultCredentials" })
            <label for="defaultCredentialsOptions" class="forcheckbox">@T("Use Windows authentication")</label>
            @Html.ValidationMessage("UseDefaultCredentials", "*")
            <span class="help-block">@T("When this option is selected, the aplication pool or host-process identity is used to authenticate with the mail server. ")</span>
        </div>
        <div class="options">
            <span data-controllerid="customCredentialsOption">
                <label for="@Html.FieldIdFor(m => m.UserName)">@T("User name")</label>
                @Html.TextBoxFor(m => m.UserName, new { @class = "form-control" })
                @Html.ValidationMessage("UserName", "*")
                <span class="help-block">@T("The username for authentication.")</span>
            </span>
            <span data-controllerid="customCredentialsOption">
                <label for="@Html.FieldIdFor(m => m.Password)">@T("Password")</label>
                @Html.TextBoxFor(m => m.Password, new { type = "password", @class = "form-control" })
                @Html.ValidationMessage("Password", "*")
                <span class="help-block">@T("The password for authentication.")</span>
            </span>
        </div>
    </div>
</fieldset>
<fieldset>
    <legend>@T("Test those settings:")</legend>
    <div class="form-group">
        <label for="emailtestto">@T("To:")</label>
        <input type="text" id="emailtestto" class="form-control" />
    </div>
    <div class="form-group">
        <label for="emailtestbcc">@T("Bcc:")</label>
        <input type="text" id="emailtestbcc" class="form-control" />
    </div>
    <div class="form-group">
        <label for="emailtestcc">@T("CC:")</label>
        <input type="text" id="emailtestcc" class="form-control" />
    </div>
    <div class="form-group">
        <label for="emailtestreplyto">@T("Reply To:")</label>
        <input type="text" id="emailtestreplyto" class="form-control" />
    </div>
    <div class="form-group">
        <label for="emailtestsubject">@T("Subject:")</label>
        <input type="text" id="emailtestsubject" class="form-control" />
    </div>
    <div class="form-group">
        <label for="emailtestbody">@T("Body:")</label>
        <textarea class="form-control" id="emailtestbody"></textarea>
    </div>
    <div>
        <button type="button" id="emailtestsend" class="button grey">@T("Send")</button>
    </div>
    @using (Script.Foot()) {
        <script type="text/javascript">
            $(function () {
                var url = "@Url.Action("TestSettings", "EmailAdmin", new {area = "Orchard.Email"})",
                    from = $("#@Html.FieldIdFor(m => m.Address)"),
                    host = $("#@Html.FieldIdFor(m => m.Host)"),
                    port = $("#@Html.FieldIdFor(m => m.Port)"),
                    enableSsl = $("#@Html.FieldIdFor(m => m.EnableSsl)"),
                    requireCredentials = $("#@Html.FieldIdFor(m => m.RequireCredentials)"),
                    useDefaultCredentials = $("input[name='@Html.NameFor(m => m.UseDefaultCredentials)']"),
                    userName = $("#@Html.FieldIdFor(m => m.UserName)"),
                    password = $("#@Html.FieldIdFor(m => m.Password)"),
                    to = $("#emailtestto"),
                    subject = $("#emailtestsubject"),
                    body = $("#emailtestbody"),
                    replyto = $("#emailtestreplyto"),
                    bcc = $("#emailtestbcc"),
                    cc = $("#emailtestcc");
                var shortCutFunction = "info";
                var title = "";

                toastr.options = {
                    closeButton: true,
                    debug: false,
                    newestOnTop: true,
                    progressBar: true,
                    positionClass: 'toast-bottom-right',
                    preventDuplicates: true,
                    onclick: null
                };

                $("#emailtestsend").click(function () {
                    shortCutFunction = "info";
                    if (to.val() == '') {
                        var $toast = toastr[shortCutFunction]('Please provide a valid email', title);
                        $('#emailtestto').focus();
                        return;
                    }
                    if (subject.val() == '') {
                        var $toast = toastr[shortCutFunction]('Please provide a valid subject', title);
                        $('#emailtestsubject').focus();
                        return;
                    }

                    var $toast = toastr[shortCutFunction]('Please wait while we are trying to reach your email server', title);


                    $.post(url, {
                        from: from.val(),
                        host: host.val(),
                        port: port.val(),
                        enableSsl: enableSsl.prop("checked"),
                        requireCredentials: requireCredentials.prop("checked"),
                        useDefaultCredentials: useDefaultCredentials.filter(':checked').val(),
                        userName: userName.val(),
                        password: password.val(),
                        to: to.val(),
                        subject: subject.val(),
                        body: body.val(),
                        replyto: replyto.val(),
                        bcc: bcc.val(),
                        cc: cc.val(),
                        __RequestVerificationToken: to.closest("form").find("input[name=__RequestVerificationToken]").val()
                    })
                    .fail(function (data) {
                        shortCutFunction = "error";
                        var $toast = toastr[shortCutFunction](data.statusText, title);
                    })
                    .done(function (data) {
                        if (data.error) {
                            shortCutFunction = "error";
                            var $toast = toastr[shortCutFunction](data.error, title);
                        } else {
                            shortCutFunction = "success";
                            var $toast = toastr[shortCutFunction](data.status, title);
                        }
                    });
                });
            });
        </script>
    }
</fieldset>