@using System.Globalization
@using Orchard.ContentManagement
@using Orchard.Environment.Descriptor.Models
@using Orchard.FileSystems.VirtualPath
@using Orchard.Localization

@{
    var shellDescriptor = WorkContext.Resolve<ShellDescriptor>();
    var virtualPathProvider = WorkContext.Resolve<IVirtualPathProvider>();

    // Default language for TinyMCE
    var language = "en";
    var currentCulture = CultureInfo.GetCultureInfo(WorkContext.CurrentCulture);
    if (!currentCulture.Name.Equals("en-US", StringComparison.OrdinalIgnoreCase)) {
        var customLanguage = currentCulture.Name.Replace('-', '_');
        if (!language.Equals(customLanguage, StringComparison.OrdinalIgnoreCase)) {
            var culture = CultureInfo.GetCultureInfo(currentCulture.Name);
            if (virtualPathProvider.TryFileExists(string.Format(@"\modules\tinymce\scripts\langs\{0}.js", customLanguage))) {
                language = customLanguage;
            }
            else if (!language.Equals(culture.TwoLetterISOLanguageName, StringComparison.OrdinalIgnoreCase) &&
                     virtualPathProvider.TryFileExists(string.Format(@"\modules\tinymce\scripts\langs\{0}.js", culture.TwoLetterISOLanguageName))) {

                language = culture.TwoLetterISOLanguageName;
            }
        }
    }
}

<script type="text/javascript">
    var mediaPickerEnabled = @(shellDescriptor.Features.Any(x => x.Name == "Orchard.MediaPicker") ? "true" : "false");
    var mediaLibraryEnabled = @(shellDescriptor.Features.Any(x => x.Name == "Orchard.MediaLibrary") ? "true" : "false");
    var directionality = '@WorkContext.GetTextDirection((IContent)Model.ContentItem)';
    var language = '@language';
</script>

@{ 
    Script.Require("OrchardTinyMce");
    Script.Require("jQueryColorBox");
    Style.Require("jQueryColorBox");
}

@Html.TextArea("Text", (string)Model.Text, 25, 80,
	 new Dictionary<string,object> {
		{"class", "html tinymce"},
		{"data-mediapicker-uploadpath",Model.AddMediaPath},
		{"data-mediapicker-title",T("Insert/Update Media")},
        {"style", "width:100%"}
	 })
