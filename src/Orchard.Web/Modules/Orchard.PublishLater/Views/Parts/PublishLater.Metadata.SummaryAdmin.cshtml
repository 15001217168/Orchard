@using Orchard.ContentManagement;
@using Orchard.Core.Common.Models;
@using Orchard.PublishLater.Models;
@{
    PublishLaterPart publishLaterPart = Model.ContentPart;
    DateTime? versionPublishedUtc = publishLaterPart.As<CommonPart>() == null ? null : publishLaterPart.As<CommonPart>().VersionPublishedUtc;
}
<ul class="pageStatus">
    <li>@* Published or not *@
    @if (publishLaterPart.HasPublished()) {
        <text></text>@Display.Image(Src: "~/Modules/Orchard.PublishLater/Content/Admin/images/online.gif", Classes: "icon", Alt: T("Online"), Title: T("The page is currently online")) <text>@T("Published")&nbsp;&#124;&nbsp;</text>
    }
    else {
        <text></text>@Display.Image(Src: "~/Modules/Orchard.PublishLater/Content/Admin/images/offline.gif", Classes: "icon", Alt: T("Offline"), Title: T("The page is currently offline")) <text>@T("Not Published")&nbsp;&#124;&nbsp;</text>
    }
    </li>
    <li>
    @* Does the page have a draft *@
    @if (publishLaterPart.HasDraft()) {
        <text></text>@Display.Image(Src: "~/Modules/Orchard.PublishLater/Content/Admin/images/draft.gif", Classes: "icon", Alt: T("Draft"), Title: T("The page has a draft"))<text> @T("Draft")&nbsp;&#124;&nbsp;</text>
    }
    else {
        <text>@T("No Draft")&nbsp;&#124;&nbsp;</text>
    }
    </li>
    @if ((((DateTime?)Model.ScheduledPublishUtc).HasValue && ((DateTime?)Model.ScheduledPublishUtc).Value > DateTime.UtcNow) || (publishLaterPart.IsPublished() && versionPublishedUtc.HasValue)) {
        <li>
        @if (publishLaterPart.IsPublished() && versionPublishedUtc.HasValue) {
            @T("Published: {0}", Display.DateTimeRelative(dateTimeUtc: versionPublishedUtc.Value))
        }
        else {
            <text></text>@Display.Image(Src: "~/Modules/Orchard.PublishLater/Content/Admin/images/scheduled.gif", Classes: "icon", Alt: T("Scheduled"), Title: T("The page is scheduled for publishing"))<text>  @T("Scheduled") </text>
            @Html.DateTime(((DateTime?)Model.ScheduledPublishUtc).Value.ToLocalTime(), T("M/d/yyyy h:mm tt"))
        }&nbsp;&#124;&nbsp;</li>
    }
</ul>