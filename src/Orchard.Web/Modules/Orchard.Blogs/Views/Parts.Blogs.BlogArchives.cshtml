@using Orchard.Blogs.Extensions;
@using Orchard.Blogs.Models;
@{
    Style.Require("BlogsArchives");
    Script.Require("BlogsArchives");
    IEnumerable<KeyValuePair<ArchiveData, int>> archives = Model.Archives;
}
@functions {
    string ArchiveText(KeyValuePair<ArchiveData, int> item, string format) {
        return string.Format("{0:" + format + "} ({1})", item.Key.ToDateTime(), item.Value);
    }
    string ArchiveUrl(KeyValuePair<ArchiveData, int> item) {
        return Url.BlogArchiveMonth((BlogPart)Model.Blog, item.Key.Year, item.Key.Month);
    }
    dynamic ArchiveLink(KeyValuePair<ArchiveData, int> item, string format) {
        return New.Link(Value: ArchiveText(item, format), Href: ArchiveUrl(item));
    }
}
<div class="archives">
    @if (archives.Count() > 20) {
    <ul class="years">
        @{
            int lastYear = archives.First().Key.Year;
            int firstYear = archives.Last().Key.Year;
        }
        @for (int year = lastYear; year >= firstYear; year--) {
            var yearMonths = archives.Where(m => m.Key.Year == year);
            
            if (year == lastYear) {
        <li>
            <h4>@year</h4>
        </li>
            } 
            
            if (year != lastYear) {
        <li class="previous">
            <h4>@year <span>(@yearMonths.Sum(ym => ym.Value))</span></h4>
            @Display.List(Items: yearMonths.Select(t => ArchiveLink(t, "MMMM")), Classes: "archiveMonthList")
        </li>
            }
        }
    </ul>
    } 
    else if (archives.Count() > 0) {
        @Display.List(Items: archives.Select(t => ArchiveLink(t, "MMMM yyyy")), Classes: "archiveMonthList")
    }
    else {
    <div class="message info">@T("None found")</div>
    }
</div>