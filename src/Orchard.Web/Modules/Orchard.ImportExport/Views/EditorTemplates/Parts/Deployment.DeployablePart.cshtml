@using Orchard.Utility.Extensions
@using System.Linq
@model Orchard.ImportExport.ViewModels.DeployablePartViewModel

<fieldset>
    @Html.Label(T("Deployment Summary").Text)
</fieldset>
<table class="items">
    <thead>
        <tr>
            <th scope="col">@T("Target")</th>
            <th scope="col">@T("Last deployed")</th>
            <th scope="col">@T("Status of last deploy")</th>
            <th scope="col" class="actions">&nbsp;</th>
        </tr>
    </thead>
    @foreach (var target in Model.Targets)
    { 
        <tr>
            <td>
                @target.Target
            </td>
            <td>
                @(target.LastDeploy.HasValue ? Display.DateTime(DateTimeUtc: target.LastDeploy.Value, CustomFormat: null) : string.Empty) 
            </td>
            <td>
                @target.Status
            </td>
            <td style="text-align: right">
                @if (Model.IsDraftable) {
                    @Html.ActionLink(T("Deploy draft").ToString(), "DeployContent", "Deployment", new { id = Model.Part.Id, targetId = target.TargetId, returnUrl = Request.RawUrl, version = "Draft", area = "Orchard.ImportExport" }, null)
                    <text>|</text>
                    @Html.ActionLink(T("Queue draft").ToString(), "QueueContent", "Deployment", new { id = Model.Part.Id, targetId = target.TargetId, version = "Draft", returnUrl = Request.RawUrl, area = "Orchard.ImportExport" }, null)
                    if (Model.HasPublishedVersion) {
                        <text>|</text>
                    }
                }
                @if (Model.HasPublishedVersion) {
                    @Html.ActionLink(T("Deploy").ToString(), "DeployContent", "Deployment", new {id = Model.Part.Id, targetId = target.TargetId, returnUrl = Request.RawUrl, version = "Published", area = "Orchard.ImportExport"}, null)
                    <text>|</text>
                    @Html.ActionLink(T("Queue").ToString(), "QueueContent", "Deployment", new { id = Model.Part.Id, targetId = target.TargetId, version = "Published", returnUrl = Request.RawUrl, area = "Orchard.ImportExport" }, null)
                }
            </td>
        </tr>
    }
</table>
