@using Orchard.Utility.Extensions
@model Orchard.ImportExport.ViewModels.UploadRecipeViewModel
@{
    Script.Require("ShapesBase");
}
<p>
    @T("Choose a recipe file to import. Please consider {0} or backing up your data first.", @Html.Link(T("exporting").Text, Url.Action("Export", "Admin", new { area = "Orchard.ImportExport" })))
</p>
<fieldset>
    <label for="RecipeFile">@T("Recipe File:")</label>
    <input type="file" id="RecipeFile" size="64" name="RecipeFile" value="@T("Browse...")"/>
</fieldset>
<fieldset>
    <div>
        @Html.CheckBoxFor(m => m.ResetSite)
        @Html.LabelFor(m => m.ResetSite, T("Reset Site").ToString(), new {@class = "forcheckbox"})
        @Html.Hint(T("Check this option to reset your site before executing the uploaded recipe."))
    </div>
    <div data-controllerid="@Html.FieldIdFor(m => m.ResetSite)">
        <div>
            @Html.LabelFor(m => m.SuperUserPassword, T("Super User Password"))
            @Html.PasswordFor(m => m.SuperUserPassword, new {@class = "text medium"})
            @Html.Hint(T("Specify a new password for the super user in case your recipe doesn't contain the current super user."))
        </div>
        <div>
            @Html.LabelFor(m => m.SuperUserPasswordConfirmation, T("Confirm Super User Password"))
            @Html.PasswordFor(m => m.SuperUserPasswordConfirmation, new {@class = "text medium"})
            @Html.Hint(T("Repeat the password to make sure you didn't mistype anything."))
        </div>
        <div class="message message-Warning">@T("This will delete your database tables. Please consider creating a backup first.")</div>
    </div>
</fieldset>
@{
    var stepIndex = 0;
    foreach (var step in Model.RecipeExecutionSteps) {
        var stepName = Html.NameFor(m => m.RecipeExecutionSteps[stepIndex].IsSelected).ToString();
        var stepId = stepName.HtmlClassify();

        <fieldset class="recipe-builder-step recipe-builder-step-@step.Name.HtmlClassify()">
            <legend>
                <input type="hidden" name="@Html.NameFor(m => m.RecipeExecutionSteps[stepIndex].Name)" value="@Model.RecipeExecutionSteps[stepIndex].Name" />
                <input type="checkbox" id="@stepId" name="@stepName" value="true" />
                <label for="@stepId" class="forcheckbox">@step.DisplayName</label>
            </legend>
            @Html.Hint(step.Description)
            <div data-controllerid="@stepId">
                @Display(step.Editor)
            </div>
        </fieldset>
        stepIndex++;
        if (stepIndex < Model.RecipeExecutionSteps.Count) {
            <hr />
        }
    }
}