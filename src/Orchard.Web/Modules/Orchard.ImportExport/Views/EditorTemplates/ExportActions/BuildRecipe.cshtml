@using Orchard.Utility.Extensions
@model Orchard.ImportExport.ViewModels.RecipeBuilderViewModel
@{
    Script.Require("ShapesBase");
}
@{
    var stepIndex = 0;
    var steps = Model.Steps.Where(x => x.IsVisible).ToArray();
    foreach (var step in steps) {
        var stepName = Html.NameFor(m => m.Steps[stepIndex].IsSelected).ToString();
        var stepId = stepName.HtmlClassify();

        <fieldset class="recipe-builder-step recipe-builder-step-@step.Name.HtmlClassify()">
            <legend>
                <input type="hidden" name="@Html.NameFor(m => m.Steps[stepIndex].Name)" value="@steps[stepIndex].Name" />
                <input type="checkbox" id="@stepId" name="@stepName" value="true" />
                <label for="@stepId" class="forcheckbox">@step.DisplayName</label>
            </legend>
            @Html.Hint(step.Description)
            @if (step.Editor != null) {
                <div data-controllerid="@stepId">
                    @Display(step.Editor)
                </div>
            }
        </fieldset>
        stepIndex++;
        if (stepIndex < steps.Count()) {
            <hr />
        }
    }
}
