@model Orchard.ContentPermissions.ViewModels.ContentPermissionsPartViewModel

@{
    Style.Include("orchard-contentpermissions-admin.css");
}

<fieldset>
    <div class="form-group">
        <div class="table-responsive">
            <table class="table table-fw-widget table-striped table-bordered dataTable">
                <tr>
                    <th class="role"><b>@T("Role")</b></th>
                    <th class="text-center"><b>@T("View any content")</b></th>
                    <th class="text-center"><b>@T("Edit any content")</b></th>
                    <th class="text-center"><b>@T("Publish any content")</b></th>
                    <th class="text-center"><b>@T("Delete any content")</b></th>
                    <th class="text-center"><b>@T("Preview any content")</b></th>
                </tr>

                @foreach (var r in Model.AllRoles.Select((x, i) => new { Index = i, Name = x.Role }))
            {
                var role = r;
                    <tr>
                        <td class="role">@role.Name</td>
                        <td class="text-center">
                            <div class="or-checkbox inline">
                                <input type="checkbox" disabled="disabled" @if (Model.ViewRoles.Any(x => x.Role == role.Name && x.Default)) { <text> checked="checked" </text>        } title="Default value" />
                                <label></label>
                            </div>
                            <div class="or-checkbox inline">
                                <input type="checkbox" value="true" @if (Model.ViewRoles.Any(x => x.Role == role.Name && x.Checked)) { <text> checked="checked" </text>        } name="@Html.FieldNameFor(m => m.ViewRoles[role.Index].Checked)" id="@Html.FieldIdFor(m => m.ViewRoles[role.Index].Checked)" @if (!Model.ViewRoles[role.Index].Enabled) { <text> disabled="disabled" </text>        } />
                                <label for="@Html.FieldIdFor(m => m.ViewRoles[role.Index].Checked)"></label>
                            </div>
                            @Html.HiddenFor(m => m.ViewRoles[role.Index].Role)
                        </td>
                        <td class="text-center">
                            <div class="or-checkbox inline">
                                <input type="checkbox" disabled="disabled" @if (Model.EditRoles.Any(x => x.Role == role.Name && x.Default)) { <text> checked="checked" </text>        } title="Default value" />
                                <label></label>
                            </div>
                            <div class="or-checkbox inline">
                                <input type="checkbox" value="true" @if (Model.EditRoles.Any(x => x.Role == role.Name && x.Checked)) { <text> checked="checked" </text>          } name="@Html.FieldNameFor(m => m.EditRoles[role.Index].Checked)" id="@Html.FieldIdFor(m => m.EditRoles[role.Index].Checked)" @if (!Model.EditRoles[role.Index].Enabled) { <text> disabled="disabled" </text>          } />
                                <label for="@Html.FieldIdFor(m => m.EditRoles[role.Index].Checked)"></label>
                            </div>
                            @Html.HiddenFor(m => m.EditRoles[role.Index].Role)
                        </td>
                        <td class="text-center">
                            <div class="or-checkbox inline">
                                <input type="checkbox" disabled="disabled" @if (Model.PublishRoles.Any(x => x.Role == role.Name && x.Default)) { <text> checked="checked" </text>         } title="Default value" />
                                <label></label>
                            </div>
                            <div class="or-checkbox inline">
                                <input type="checkbox" value="true" @if (Model.PublishRoles.Any(x => x.Role == role.Name && x.Checked)) { <text> checked="checked" </text>          } name="@Html.FieldNameFor(m => m.PublishRoles[role.Index].Checked)" id="@Html.FieldIdFor(m => m.PublishRoles[role.Index].Checked)" @if (!Model.PublishRoles[role.Index].Enabled) { <text> disabled="disabled" </text>          } />
                                <label for="@Html.FieldIdFor(m => m.PublishRoles[role.Index].Checked)"></label>
                            </div>
                            @Html.HiddenFor(m => m.PublishRoles[role.Index].Role)
                        </td>
                        <td class="text-center">
                            <div class="or-checkbox inline">
                                <input type="checkbox" disabled="disabled" @if (Model.DeleteRoles.Any(x => x.Role == role.Name && x.Default)) { <text> checked="checked" </text>         } title="Default value" />
                                <label></label>
                            </div>
                            <div class="or-checkbox inline">
                                <input type="checkbox" value="true" @if (Model.DeleteRoles.Any(x => x.Role == role.Name && x.Checked)) { <text> checked="checked" </text>           } name="@Html.FieldNameFor(m => m.DeleteRoles[role.Index].Checked)" id="@Html.FieldIdFor(m => m.DeleteRoles[role.Index].Checked)" @if (!Model.DeleteRoles[role.Index].Enabled) { <text> disabled="disabled" </text>           } />
                                <label for="@Html.FieldIdFor(m => m.DeleteRoles[role.Index].Checked)"></label>
                            </div>
                            @Html.HiddenFor(m => m.DeleteRoles[role.Index].Role)
                        </td>
                        <td class="text-center">
                            <div class="or-checkbox inline">
                                <input type="checkbox" disabled="disabled" @if (Model.PreviewRoles.Any(x => x.Role == role.Name && x.Default)) { <text> checked="checked" </text>          } title="Default value" />
                                <label></label>
                            </div>
                            <div class="or-checkbox inline">
                                <input type="checkbox" value="true" @if (Model.PreviewRoles.Any(x => x.Role == role.Name && x.Checked)) { <text> checked="checked" </text>           } name="@Html.FieldNameFor(m => m.PreviewRoles[role.Index].Checked)" id="@Html.FieldIdFor(m => m.PreviewRoles[role.Index].Checked)" @if (!Model.PreviewRoles[role.Index].Enabled) { <text> disabled="disabled" </text>           } />
                                <label for="@Html.FieldIdFor(m => m.PreviewRoles[role.Index].Checked)"></label>
                            </div>
                            @Html.HiddenFor(m => m.PreviewRoles[role.Index].Role)
                        </td>
                    </tr>
                }
            </table>
        </div>
        <div class="table-responsive">
            <table class="table table-fw-widget table-striped table-bordered dataTable no-footer">
                <tr>
                    <th class="role"><b>@T("Role")</b></th>
                    <th class="text-center"><b>@T("View own content")</b></th>
                    <th class="text-center"><b>@T("Edit own content")</b></th>
                    <th class="text-center"><b>@T("Publish own content")</b></th>
                    <th class="text-center"><b>@T("Delete own content")</b></th>
                    <th class="text-center"><b>@T("Preview own content")</b></th>
                </tr>

                @foreach (var r in Model.AllRoles.Select((x, i) => new { Index = i, Name = x.Role }))
            {
                var role = r;
                    <tr>
                        <td class="role">@role.Name</td>
                        <td class="text-center">
                            <div class="or-checkbox inline">
                                <input type="checkbox" disabled="disabled" @if (Model.ViewOwnRoles.Any(x => x.Role == role.Name && x.Default)) { <text> checked="checked" </text>           } title="Default value" />
                                <label></label>
                            </div>
                            <div class="or-checkbox inline">
                                <input type="checkbox" value="true" @if (Model.ViewOwnRoles.Any(x => x.Role == role.Name && x.Checked)) { <text> checked="checked" </text>            } name="@Html.FieldNameFor(m => m.ViewOwnRoles[role.Index].Checked)" id="@Html.FieldIdFor(m => m.ViewOwnRoles[role.Index].Checked)" @if (!Model.ViewOwnRoles[role.Index].Enabled) { <text> disabled="disabled" </text>            } />
                                <label for="@Html.FieldIdFor(m => m.ViewOwnRoles[role.Index].Checked)"></label>
                            </div>
                            @Html.HiddenFor(m => m.ViewOwnRoles[role.Index].Role)
                        </td>
                        <td class="text-center">
                            <div class="or-checkbox inline">
                                <input type="checkbox" disabled="disabled" @if (Model.EditOwnRoles.Any(x => x.Role == role.Name && x.Default)) { <text> checked="checked" </text>           } title="Default value" />
                                <label></label>
                            </div>
                            <div class="or-checkbox inline">
                                <input type="checkbox" value="true" @if (Model.EditOwnRoles.Any(x => x.Role == role.Name && x.Checked)) { <text> checked="checked" </text>            } name="@Html.FieldNameFor(m => m.EditOwnRoles[role.Index].Checked)" id="@Html.FieldIdFor(m => m.EditOwnRoles[role.Index].Checked)" @if (!Model.EditOwnRoles[role.Index].Enabled) { <text> disabled="disabled" </text>            } />
                                <label for="@Html.FieldIdFor(m => m.EditOwnRoles[role.Index].Checked)"></label>
                            </div>
                            @Html.HiddenFor(m => m.EditOwnRoles[role.Index].Role)
                        </td>
                        <td class="text-center">
                            <div class="or-checkbox inline">
                                <input type="checkbox" disabled="disabled" @if (Model.PublishOwnRoles.Any(x => x.Role == role.Name && x.Default)) { <text> checked="checked" </text>           } title="Default value" />
                                <label></label>
                            </div>
                            <div class="or-checkbox inline">
                                <input type="checkbox" value="true" @if (Model.PublishOwnRoles.Any(x => x.Role == role.Name && x.Checked)) { <text> checked="checked" </text>            } name="@Html.FieldNameFor(m => m.PublishOwnRoles[role.Index].Checked)" id="@Html.FieldIdFor(m => m.PublishOwnRoles[role.Index].Checked)" @if (!Model.PublishOwnRoles[role.Index].Enabled) { <text> disabled="disabled" </text>            } />
                                <label for="@Html.FieldIdFor(m => m.PublishOwnRoles[role.Index].Checked)"></label>
                            </div>
                            @Html.HiddenFor(m => m.PublishOwnRoles[role.Index].Role)
                        </td>
                        <td class="text-center">
                            <div class="or-checkbox inline">
                                <input type="checkbox" disabled="disabled" @if (Model.DeleteOwnRoles.Any(x => x.Role == role.Name && x.Default)) { <text> checked="checked" </text>            } title="Default value" />
                                <label></label>
                            </div>
                            <div class="or-checkbox inline">
                                <input type="checkbox" value="true" @if (Model.DeleteOwnRoles.Any(x => x.Role == role.Name && x.Checked)) { <text> checked="checked" </text>             } name="@Html.FieldNameFor(m => m.DeleteOwnRoles[role.Index].Checked)" id="@Html.FieldIdFor(m => m.DeleteOwnRoles[role.Index].Checked)" @if (!Model.DeleteOwnRoles[role.Index].Enabled) { <text> disabled="disabled" </text>             } />
                                <label for="@Html.FieldIdFor(m => m.DeleteOwnRoles[role.Index].Checked)"></label>
                            </div>
                            @Html.HiddenFor(m => m.DeleteOwnRoles[role.Index].Role)
                        </td>
                        <td class="text-center">
                            <div class="or-checkbox inline">
                                <input type="checkbox" disabled="disabled" @if (Model.PreviewOwnRoles.Any(x => x.Role == role.Name && x.Default)) { <text> checked="checked" </text>             } title="Default value" />
                                <label></label>
                            </div>
                            <div class="or-checkbox inline">
                                <input type="checkbox" value="true" @if (Model.PreviewOwnRoles.Any(x => x.Role == role.Name && x.Checked)) { <text> checked="checked" </text>              } name="@Html.FieldNameFor(m => m.PreviewOwnRoles[role.Index].Checked)" id="@Html.FieldIdFor(m => m.PreviewOwnRoles[role.Index].Checked)" @if (!Model.PreviewOwnRoles[role.Index].Enabled) { <text> disabled="disabled" </text>              } />
                                <label for="@Html.FieldIdFor(m => m.PreviewOwnRoles[role.Index].Checked)"></label>
                            </div>
                            @Html.HiddenFor(m => m.PreviewOwnRoles[role.Index].Role)
                        </td>
                    </tr>
                }
            </table>
        </div>
        <span class="help-block">@T("Those permissions will be applied by default to any content item of this type. Users with sufficient permissions can change them for each content item.")</span>
    </div>
    <div class="form-group">
        <h4>@T("Only show those roles in the editor:")</h4>
        <span class="help-block">@T("Uncheck the roles for which you don't want the editor to change the permissions for.")</span>
        <div>
            <ul class="list-unstyled">
                @foreach (var r in Model.AllRoles.Select((x, i) => new { Index = i, Entry = x }))
                {
                    var role = r;
                    <li>
                        <div class="or-checkbox">
                            <input type="checkbox" value="true" @if (Model.AllRoles.Any(x => x.Role == role.Entry.Role && x.Checked)) { <text> checked="checked" </text>      } name="@Html.FieldNameFor(m => m.AllRoles[role.Index].Checked)" id="@Html.FieldIdFor(m => m.AllRoles[role.Index].Checked)" @if (!Model.ViewOwnRoles[role.Index].Enabled) { <text> disabled="disabled" </text>      } />
                            <label for="@Html.FieldIdFor(m => m.AllRoles[role.Index].Checked)">@role.Entry.Role</label>
                        </div>
                        @Html.HiddenFor(m => m.AllRoles[role.Index].Role)
                    </li>
                }
            </ul>
        </div>
    </div>
</fieldset>
