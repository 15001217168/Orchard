@using Orchard.Utility.Extensions

@{ 
    Script.Require("jQuery");
    Layout.Title = T("Migrate Taxonomies").ToString(); 
}

<div class="message message-Warning" id="message-progress" style="display: none"></div>

<div class="panel panel-default">
    @using (Html.BeginFormAntiForgeryPost()) {
        Html.ValidationSummary();
        <div class="panel-body">
            <fieldset>
                <legend>@T("Migrating Taxonomies:")</legend>
                <span class="help-block">@T("This migration step will convert the Contrib.Taxonomies content items to Orchard.Taxonomies.")</span>
                <span class="help-block">@T("If you had any Term Widget instance, you will have to replace them with Projection Queries.")</span>
            </fieldset>
        </div>
        <div class="panel-footer">
            @if (ViewBag.CanMigrate) {
                <button class="btn btn-primary" type="submit">@T("Migrate")</button>
            }
        </div>
    }
</div>
<fieldset>
    <legend>@T("Migrating Terms: ")</legend>
    <span class="hint">@T("This migration step will update all existing terms so they are lexicographically orderable")</span>
    <button type="button" class="button button-migrate" data-url="@Url.Action("MigrateTerms", "Taxonomy")">@T("Migrate")</button>
</fieldset>

@using (Script.Foot()) {
    <script type="text/javascript">
        $(function() {
            var antiForgeryToken = '@HttpUtility.JavaScriptStringEncode(Html.AntiForgeryTokenValueOrchard().ToString())';     
            var endMessage = '@HttpUtility.JavaScriptStringEncode(T("All terms have been processed").Text)';
            $('.button-migrate').click(function () {
                var importUrl = $(this).data('url');

                var startId = 0;
                $('#message-progress').show();
                var iId = setInterval(function () {

                    $.ajax({
                        type: 'POST',
                        url: importUrl,
                        async: false,
                        data: {
                            __RequestVerificationToken: antiForgeryToken,
                            id: startId // start at index 0
                        },
                        success: function (data) {
                            if (Number(data) == startId) {
                                clearInterval(iId);
                                $('#message-progress').text(endMessage);
                            }
                            else {
                                startId = Number(data);
                                $('#message-progress').text('Processing content item ' + startId);
                            }
                        },
                        fail: function(result) {
                            console.log("An error occured: " + result);
                        }
                    });

                }, 100);
                
            });
        });
    </script>
}
