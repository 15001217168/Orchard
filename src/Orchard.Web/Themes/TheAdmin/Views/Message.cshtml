@using Orchard.UI.Notify
@{
    var alertIcon = "s7-info";
    
    Model.Classes.Add("alert alert-dismissible");
    Model.Attributes.Add("role", "alert");

    NotifyType notifyType = Model.Type;
    switch (notifyType) {
        case NotifyType.Information:
            Model.Classes.Add("alert-success");
            alertIcon = "s7-check";
            break;
        case NotifyType.Warning:
            Model.Classes.Add("alert-warning");
            alertIcon = "s7-attention";
            break;
        case NotifyType.Error:
            Model.Classes.Add("alert-danger");
            alertIcon = "s7-close-circle";
            break;
        default:
            Model.Classes.Add("alert-info");
            break;
    }

    var messageTag = Tag(Model, "div");
}

@messageTag.StartElement
<button class="close" aria-label="Close" data-dismiss="alert" type="button">
    <span class="s7-close" aria-hidden="true"></span>
</button>
<span class="icon @alertIcon"></span>
<span class="message">
    @Html.Raw(Html.Encode(Model.Message).Replace("\n", "<br />"))
</span>
@messageTag.EndElement